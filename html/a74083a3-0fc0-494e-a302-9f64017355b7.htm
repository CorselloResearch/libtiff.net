<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Create multipage TIFF</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="a74083a3-0fc0-494e-a302-9f64017355b7" /><meta name="Description" content="This sample shows how to create a multipage TIFF image." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="'true'" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><link type="text/css" rel="stylesheet" href="./../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"><!----></script><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">Create multipage TIFF</td><td class="OH_tdRunningTitleColumn">LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>This sample shows how to create a multipage TIFF image. </p></div><div id="ID0EBAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EBAAAAA_tabimgleft"></div><div id="ID0EBAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EBAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EBAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EBAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EBAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EBAAAAA_tabimgright"></div></div><div id="ID0EBAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EBAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EBAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">using</span> System.Diagnostics;

<span class="highlight-keyword">using</span> BitMiracle.LibTiff.Classic;

<span class="highlight-keyword">namespace</span> BitMiracle.LibTiff.Samples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> CreateMultipageTiff
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> numberOfPages = <span class="highlight-number">4</span>;

            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> width = <span class="highlight-number">256</span>;
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> height = <span class="highlight-number">256</span>;
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> samplesPerPixel = <span class="highlight-number">1</span>;
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> bitsPerSample = <span class="highlight-number">8</span>;

            <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> fileName = <span class="highlight-literal">"CreateMultipageTiff.tif"</span>;

            <span class="highlight-keyword">byte</span>[][] firstPageBuffer = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[height][];
            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; height; j++)
            {
                firstPageBuffer[j] = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[width];
                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; width; i++)
                    firstPageBuffer[j][i] = (<span class="highlight-keyword">byte</span>)(j * i);
            }

            <span class="highlight-keyword">using</span> (Tiff output = Tiff.Open(fileName, <span class="highlight-literal">"w"</span>))
            {
                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> page = <span class="highlight-number">0</span>; page &lt; numberOfPages; ++page)
                {
                    output.SetField(TiffTag.IMAGEWIDTH, width / samplesPerPixel);
                    output.SetField(TiffTag.SAMPLESPERPIXEL, samplesPerPixel);
                    output.SetField(TiffTag.BITSPERSAMPLE, bitsPerSample);
                    output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT);
                    output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG);

                    <span class="highlight-keyword">if</span> (page % <span class="highlight-number">2</span> == <span class="highlight-number">0</span>)
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK);
                    <span class="highlight-keyword">else</span>
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISWHITE);

                    output.SetField(TiffTag.ROWSPERSTRIP, output.DefaultStripSize(<span class="highlight-number">0</span>));
                    output.SetField(TiffTag.XRESOLUTION, <span class="highlight-number">100.0</span>);
                    output.SetField(TiffTag.YRESOLUTION, <span class="highlight-number">100.0</span>);
                    output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH);

                    <span class="highlight-comment">// specify that it's a page within the multipage file</span>
                    output.SetField(TiffTag.SUBFILETYPE, FileType.PAGE);
                    <span class="highlight-comment">// specify the page number</span>
                    output.SetField(TiffTag.PAGENUMBER, page, numberOfPages);

                    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; height; ++j)
                        output.WriteScanline(firstPageBuffer[j], j);

                    output.WriteDirectory();
                }
            }

            Process.Start(fileName);
        }
    }
}</pre></div><div id="ID0EBAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>using System.Diagnostics;

using BitMiracle.LibTiff.Classic;

namespace BitMiracle.LibTiff.Samples
{
    public static class CreateMultipageTiff
    {
        public static void Main()
        {
            const int numberOfPages = 4;

            const int width = 256;
            const int height = 256;
            const int samplesPerPixel = 1;
            const int bitsPerSample = 8;

            const string fileName = "CreateMultipageTiff.tif";

            byte[][] firstPageBuffer = new byte[height][];
            for (int j = 0; j &lt; height; j++)
            {
                firstPageBuffer[j] = new byte[width];
                for (int i = 0; i &lt; width; i++)
                    firstPageBuffer[j][i] = (byte)(j * i);
            }

            using (Tiff output = Tiff.Open(fileName, "w"))
            {
                for (int page = 0; page &lt; numberOfPages; ++page)
                {
                    output.SetField(TiffTag.IMAGEWIDTH, width / samplesPerPixel);
                    output.SetField(TiffTag.SAMPLESPERPIXEL, samplesPerPixel);
                    output.SetField(TiffTag.BITSPERSAMPLE, bitsPerSample);
                    output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT);
                    output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG);

                    if (page % 2 == 0)
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK);
                    else
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISWHITE);

                    output.SetField(TiffTag.ROWSPERSTRIP, output.DefaultStripSize(0));
                    output.SetField(TiffTag.XRESOLUTION, 100.0);
                    output.SetField(TiffTag.YRESOLUTION, 100.0);
                    output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH);

                    // specify that it's a page within the multipage file
                    output.SetField(TiffTag.SUBFILETYPE, FileType.PAGE);
                    // specify the page number
                    output.SetField(TiffTag.PAGENUMBER, page, numberOfPages);

                    for (int j = 0; j &lt; height; ++j)
                        output.WriteScanline(firstPageBuffer[j], j);

                    output.WriteDirectory();
                }
            }

            Process.Start(fileName);
        }
    }
}</pre></div><div id="ID0EBAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBAAAAA');</script><div id="ID0EAAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAAAAA_tabimgleft"></div><div id="ID0EAAAAAA_tab1" class="OH_CodeSnippetContainerTabDisabled" EnableCopyCode="true" disabled="true"><a>C#</a></div><div id="ID0EAAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EAAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAAAAA_tabimgright"></div></div><div id="ID0EAAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="highlight-keyword">Imports</span> System
<span class="highlight-keyword">Imports</span> System.Diagnostics

<span class="highlight-keyword">Imports</span> BitMiracle.LibTiff.Classic

<span class="highlight-keyword">Namespace</span> BitMiracle.LibTiff.Samples
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">NotInheritable</span> <span class="highlight-keyword">Class</span> CreateMultipageTiff
        <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span> 
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> Main()
            <span class="highlight-keyword">Const</span> numberOfPages <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">4</span> 

            <span class="highlight-keyword">Const</span> width <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">256</span> 
            <span class="highlight-keyword">Const</span> height <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">256</span> 
            <span class="highlight-keyword">Const</span> samplesPerPixel <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">1</span> 
            <span class="highlight-keyword">Const</span> bitsPerSample <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">8</span> 

            <span class="highlight-keyword">Const</span> fileName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"CreateMultipageTiff.tif"</span> 

            <span class="highlight-keyword">Dim</span> firstPageBuffer <span class="highlight-keyword">As</span> <span class="highlight-keyword">Byte</span>()() = <span class="highlight-keyword">New</span> <span class="highlight-keyword">Byte</span>(height - <span class="highlight-number">1</span>)() {}
            <span class="highlight-keyword">For</span> j <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> height - <span class="highlight-number">1</span>
                firstPageBuffer(j) = <span class="highlight-keyword">New</span> <span class="highlight-keyword">Byte</span>(width - <span class="highlight-number">1</span>) {}
                <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> width - <span class="highlight-number">1</span>
                    firstPageBuffer(j)(i) = j * i <span class="highlight-keyword">Mod</span> <span class="highlight-number">256</span> 
                <span class="highlight-keyword">Next</span> 
            <span class="highlight-keyword">Next</span> 

            <span class="highlight-keyword">Using</span> output <span class="highlight-keyword">As</span> Tiff = Tiff.Open(fileName, <span class="highlight-literal">"w"</span>)
                <span class="highlight-keyword">For</span> page <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> numberOfPages - <span class="highlight-number">1</span>
                    output.SetField(TiffTag.IMAGEWIDTH, width / samplesPerPixel)
                    output.SetField(TiffTag.SAMPLESPERPIXEL, samplesPerPixel)
                    output.SetField(TiffTag.BITSPERSAMPLE, bitsPerSample)
                    output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT)
                    output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG)

                    <span class="highlight-keyword">If</span> (page <span class="highlight-keyword">Mod</span> <span class="highlight-number">2</span> = <span class="highlight-number">0</span>) <span class="highlight-keyword">Then</span>
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK)
                    <span class="highlight-keyword">Else</span>
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISWHITE)
                    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

                    output.SetField(TiffTag.ROWSPERSTRIP, output.DefaultStripSize(<span class="highlight-number">0</span>))
                    output.SetField(TiffTag.XRESOLUTION, <span class="highlight-number">100.0</span>)
                    output.SetField(TiffTag.YRESOLUTION, <span class="highlight-number">100.0</span>)
                    output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH)

                    <span class="highlight-comment">' specify that it's a page within the multipage file</span>
                    output.SetField(TiffTag.SUBFILETYPE, FileType.PAGE)
                    <span class="highlight-comment">' specify the page number</span>
                    output.SetField(TiffTag.PAGENUMBER, page, numberOfPages)

                    <span class="highlight-keyword">For</span> j <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> height - <span class="highlight-number">1</span>
                        output.WriteScanline(firstPageBuffer(j), j)
                    <span class="highlight-keyword">Next</span>

                    output.WriteDirectory()
                <span class="highlight-keyword">Next</span> 
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

            Process.Start(fileName)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span> 
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span> 
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div><div id="ID0EAAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Imports System
Imports System.Diagnostics

Imports BitMiracle.LibTiff.Classic

Namespace BitMiracle.LibTiff.Samples
    Public NotInheritable Class CreateMultipageTiff
        Private Sub New()
        End Sub 
        Public Shared Sub Main()
            Const numberOfPages As Integer = 4 

            Const width As Integer = 256 
            Const height As Integer = 256 
            Const samplesPerPixel As Integer = 1 
            Const bitsPerSample As Integer = 8 

            Const fileName As String = "CreateMultipageTiff.tif" 

            Dim firstPageBuffer As Byte()() = New Byte(height - 1)() {}
            For j As Integer = 0 To height - 1
                firstPageBuffer(j) = New Byte(width - 1) {}
                For i As Integer = 0 To width - 1
                    firstPageBuffer(j)(i) = j * i Mod 256 
                Next 
            Next 

            Using output As Tiff = Tiff.Open(fileName, "w")
                For page As Integer = 0 To numberOfPages - 1
                    output.SetField(TiffTag.IMAGEWIDTH, width / samplesPerPixel)
                    output.SetField(TiffTag.SAMPLESPERPIXEL, samplesPerPixel)
                    output.SetField(TiffTag.BITSPERSAMPLE, bitsPerSample)
                    output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT)
                    output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG)

                    If (page Mod 2 = 0) Then
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK)
                    Else
                        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISWHITE)
                    End If

                    output.SetField(TiffTag.ROWSPERSTRIP, output.DefaultStripSize(0))
                    output.SetField(TiffTag.XRESOLUTION, 100.0)
                    output.SetField(TiffTag.YRESOLUTION, 100.0)
                    output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH)

                    ' specify that it's a page within the multipage file
                    output.SetField(TiffTag.SUBFILETYPE, FileType.PAGE)
                    ' specify the page number
                    output.SetField(TiffTag.PAGENUMBER, page, numberOfPages)

                    For j As Integer = 0 To height - 1
                        output.WriteScanline(firstPageBuffer(j), j)
                    Next

                    output.WriteDirectory()
                Next 
            End Using

            Process.Start(fileName)
        End Sub 
    End Class 
End Namespace</pre></div><div id="ID0EAAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAAAAA');</script></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.bitmiracle.com/libtiff" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2008-2013 Bit Miracle. All rights reserved. (http://www.bitmiracle.com/libtiff)</a></p><div class="OH_feedbacklink"><a href="mailto:support@bitmiracle.com?subject=LibTiff.Net%2c+the+managed+version+of+the+LibTiff+library+for+reading+and+writing+TIFF.+Create+multipage+TIFF+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to support@bitmiracle.com.</div></div></body></html>
<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Read all TIFF tags</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="01d0b300-5deb-4e14-a534-c1a91fac0c2a" /><meta name="Description" content="This sample shows how to enumerate all tags that are set in a TIFF image." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="'true'" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><link type="text/css" rel="stylesheet" href="./../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"><!----></script><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">Read all TIFF tags</td><td class="OH_tdRunningTitleColumn">LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>This sample shows how to enumerate all tags that are set in a TIFF image.</p><p></p><p>Basic idea is to use Tiff.GetField method with all possible input values in a loop and check for non-null return value.</p></div><div id="ID0EBAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EBAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EBAAAAA_tabimgleft"></div><div id="ID0EBAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EBAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EBAAAAA_tab2" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>VB</a></div><div id="ID0EBAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EBAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EBAAAAA_tabimgright"></div></div><div id="ID0EBAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EBAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EBAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EBAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EBAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">using</span> System.Diagnostics;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Windows.Forms;

<span class="highlight-keyword">using</span> BitMiracle.LibTiff.Classic;

<span class="highlight-keyword">namespace</span> BitMiracle.LibTiff.Samples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> EnumerateTiffTags
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> fileName = <span class="highlight-literal">@"Sample data\multipage.tif"</span>;

            <span class="highlight-keyword">using</span> (Tiff image = Tiff.Open(fileName, <span class="highlight-literal">"r"</span>))
            {
                <span class="highlight-keyword">if</span> (image == <span class="highlight-keyword">null</span>)
                {
                    MessageBox.Show(<span class="highlight-literal">"Could not open incoming image"</span>);
                    <span class="highlight-keyword">return</span>;
                }

                <span class="highlight-keyword">using</span> (StreamWriter writer = <span class="highlight-keyword">new</span> StreamWriter(<span class="highlight-literal">"EnumerateTiffTags.txt"</span>))
                {
                    <span class="highlight-keyword">short</span> numberOfDirectories = image.NumberOfDirectories();
                    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">short</span> d = <span class="highlight-number">0</span>; d &lt; numberOfDirectories; ++d)
                    {
                        <span class="highlight-keyword">if</span> (d != <span class="highlight-number">0</span>)
                            writer.WriteLine(<span class="highlight-literal">"---------------------------------"</span>);

                        image.SetDirectory((<span class="highlight-keyword">short</span>)d);

                        writer.WriteLine(<span class="highlight-literal">"Image {0}, page {1} has following tags set:\n"</span>, fileName, d);
                        <span class="highlight-keyword">for</span> (<span class="highlight-keyword">ushort</span> t = <span class="highlight-keyword">ushort</span>.MinValue; t &lt; <span class="highlight-keyword">ushort</span>.MaxValue; ++t)
                        {
                            TiffTag tag = (TiffTag)t;
                            FieldValue[] <span class="highlight-keyword">value</span> = image.GetField(tag);
                            <span class="highlight-keyword">if</span> (<span class="highlight-keyword">value</span> != <span class="highlight-keyword">null</span>)
                            {
                                <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; <span class="highlight-keyword">value</span>.Length; j++)
                                {
                                    writer.WriteLine(<span class="highlight-literal">"{0}"</span>, tag.ToString());
                                    writer.WriteLine(<span class="highlight-literal">"{0} : {1}"</span>, <span class="highlight-keyword">value</span>[j].Value.GetType().ToString(), <span class="highlight-keyword">value</span>[j].ToString());
                                }

                                writer.WriteLine();
                            }
                        }
                    }
                }
            }

            Process.Start(<span class="highlight-literal">"EnumerateTiffTags.txt"</span>);
        }
    }
}</pre></div><div id="ID0EBAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

using BitMiracle.LibTiff.Classic;

namespace BitMiracle.LibTiff.Samples
{
    public static class EnumerateTiffTags
    {
        public static void Main()
        {
            const string fileName = @"Sample data\multipage.tif";

            using (Tiff image = Tiff.Open(fileName, "r"))
            {
                if (image == null)
                {
                    MessageBox.Show("Could not open incoming image");
                    return;
                }

                using (StreamWriter writer = new StreamWriter("EnumerateTiffTags.txt"))
                {
                    short numberOfDirectories = image.NumberOfDirectories();
                    for (short d = 0; d &lt; numberOfDirectories; ++d)
                    {
                        if (d != 0)
                            writer.WriteLine("---------------------------------");

                        image.SetDirectory((short)d);

                        writer.WriteLine("Image {0}, page {1} has following tags set:\n", fileName, d);
                        for (ushort t = ushort.MinValue; t &lt; ushort.MaxValue; ++t)
                        {
                            TiffTag tag = (TiffTag)t;
                            FieldValue[] value = image.GetField(tag);
                            if (value != null)
                            {
                                for (int j = 0; j &lt; value.Length; j++)
                                {
                                    writer.WriteLine("{0}", tag.ToString());
                                    writer.WriteLine("{0} : {1}", value[j].Value.GetType().ToString(), value[j].ToString());
                                }

                                writer.WriteLine();
                            }
                        }
                    }
                }
            }

            Process.Start("EnumerateTiffTags.txt");
        }
    }
}</pre></div><div id="ID0EBAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EBAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBAAAAA');</script><div id="ID0EAAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EAAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAAAAAA_tabimgleft"></div><div id="ID0EAAAAAA_tab1" class="OH_CodeSnippetContainerTabDisabled" EnableCopyCode="true" disabled="true"><a>C#</a></div><div id="ID0EAAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EAAAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EAAAAAA_tabimgright"></div></div><div id="ID0EAAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EAAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EAAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EAAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="highlight-keyword">Imports</span> Microsoft.VisualBasic
<span class="highlight-keyword">Imports</span> System.Diagnostics
<span class="highlight-keyword">Imports</span> System.IO
<span class="highlight-keyword">Imports</span> System.Windows.Forms

<span class="highlight-keyword">Imports</span> BitMiracle.LibTiff.Classic

<span class="highlight-keyword">Namespace</span> BitMiracle.LibTiff.Samples
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">NotInheritable</span> <span class="highlight-keyword">Class</span> EnumerateTiffTags
        <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span> 
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> Main()
            <span class="highlight-keyword">Const</span> fileName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Sample data\multipage.tif"</span> 

            <span class="highlight-keyword">Using</span> image <span class="highlight-keyword">As</span> Tiff = Tiff.Open(fileName, <span class="highlight-literal">"r"</span>)
                <span class="highlight-keyword">If</span> image <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    MessageBox.Show(<span class="highlight-literal">"Could not open incoming image"</span>)
                    <span class="highlight-keyword">Return</span> 
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span> 

                <span class="highlight-keyword">Using</span> writer <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StreamWriter(<span class="highlight-literal">"EnumerateTiffTags.txt"</span>)
                    <span class="highlight-keyword">Dim</span> numberOfDirectories <span class="highlight-keyword">As</span> <span class="highlight-keyword">Short</span> = image.NumberOfDirectories()
                    <span class="highlight-keyword">For</span> d <span class="highlight-keyword">As</span> <span class="highlight-keyword">Short</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> numberOfDirectories - <span class="highlight-number">1</span> 
                        <span class="highlight-keyword">If</span> d &lt;&gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                            writer.WriteLine(<span class="highlight-literal">"---------------------------------"</span>)
                        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

                        image.SetDirectory(<span class="highlight-keyword">CShort</span>(d))

                        writer.WriteLine(<span class="highlight-literal">"Image {0}, page {1} has following tags set:"</span> &amp; vbCrLf, fileName, d)
                        <span class="highlight-keyword">For</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> <span class="highlight-number">65535</span> 
                            <span class="highlight-keyword">Dim</span> tag <span class="highlight-keyword">As</span> TiffTag = <span class="highlight-keyword">DirectCast</span>(t, TiffTag)
                            <span class="highlight-keyword">Dim</span> value <span class="highlight-keyword">As</span> FieldValue() = image.GetField(tag)
                            <span class="highlight-keyword">If</span> value <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span> 
                                <span class="highlight-keyword">For</span> j <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> value.Length - <span class="highlight-number">1</span>
                                    writer.WriteLine(<span class="highlight-literal">"{0}"</span>, tag.ToString())
                                    writer.WriteLine(<span class="highlight-literal">"{0} : {1}"</span>, value(j).Value.[<span class="highlight-keyword">GetType</span>]().ToString(), value(j).ToString())
                                <span class="highlight-keyword">Next</span>

                                writer.WriteLine()
                            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span> 
                        <span class="highlight-keyword">Next</span> 
                    <span class="highlight-keyword">Next</span> 
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span> 
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

            Process.Start(<span class="highlight-literal">"EnumerateTiffTags.txt"</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span> 
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span> 
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div><div id="ID0EAAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Imports Microsoft.VisualBasic
Imports System.Diagnostics
Imports System.IO
Imports System.Windows.Forms

Imports BitMiracle.LibTiff.Classic

Namespace BitMiracle.LibTiff.Samples
    Public NotInheritable Class EnumerateTiffTags
        Private Sub New()
        End Sub 
        Public Shared Sub Main()
            Const fileName As String = "Sample data\multipage.tif" 

            Using image As Tiff = Tiff.Open(fileName, "r")
                If image Is Nothing Then
                    MessageBox.Show("Could not open incoming image")
                    Return 
                End If 

                Using writer As New StreamWriter("EnumerateTiffTags.txt")
                    Dim numberOfDirectories As Short = image.NumberOfDirectories()
                    For d As Short = 0 To numberOfDirectories - 1 
                        If d &lt;&gt; 0 Then
                            writer.WriteLine("---------------------------------")
                        End If

                        image.SetDirectory(CShort(d))

                        writer.WriteLine("Image {0}, page {1} has following tags set:" &amp; vbCrLf, fileName, d)
                        For t As Integer = 0 To 65535 
                            Dim tag As TiffTag = DirectCast(t, TiffTag)
                            Dim value As FieldValue() = image.GetField(tag)
                            If value IsNot Nothing Then 
                                For j As Integer = 0 To value.Length - 1
                                    writer.WriteLine("{0}", tag.ToString())
                                    writer.WriteLine("{0} : {1}", value(j).Value.[GetType]().ToString(), value(j).ToString())
                                Next

                                writer.WriteLine()
                            End If 
                        Next 
                    Next 
                End Using 
            End Using

            Process.Start("EnumerateTiffTags.txt")
        End Sub 
    End Class 
End Namespace</pre></div><div id="ID0EAAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0EAAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAAAAA');</script></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.bitmiracle.com/libtiff" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright © 2008-2013 Bit Miracle. All rights reserved. (http://www.bitmiracle.com/libtiff)</a></p><div class="OH_feedbacklink"><a href="mailto:support@bitmiracle.com?subject=LibTiff.Net%2c+the+managed+version+of+the+LibTiff+library+for+reading+and+writing+TIFF.+Read+all+TIFF+tags+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to support@bitmiracle.com.</div></div></body></html>